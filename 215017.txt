На самиот почеток поставувам име и е-адреса на корисникот кој е овластен врз тој репозиториум (а тоа сум јас).
Команди:
$ git config --global user.name "AnaStevanovskaFINKI215017"
$ git config --global user.email a.stevanovska3@gmail.com

-----------------------------------------------------------------------------------------------------------------
Чекор 4)
Команди:
$ mkdir SI_2024_lab1_215017  ---> креирам локален репозиториум
$ cd SI_2024_lab1_215017 ---> влегувам во тој репозиториум
$ git init ---> иницијализарам git во репозиториумот

-----------------------------------------------------------------------------------------------------------------
Чекор 5)
Команда:
$ git remote add origin https://github.com/AnaStevanovskaFINKI215017/SI_2024_lab1_215017.git ---> поврзување на локалниот репозиториум со оддалечениот репозиториум

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Чекор 6)
Команди:
$ nano README.md ---> креирам README.md датотека
$ git add README.md ---> ја додавам во локалниот репозиториум
$ git commit -m "Initial commit" ---> правам commit со пораката "Initial commit"

------------------------------------------------------------------------------------
Чекор 7)
Команди:
Најпрво ги симнав назначените документи и ги поставив во локалниот репозиториум, а потоа:
$ git add . ---> правам нивно додавање
$ git commit -m "Add starter code" ---> правам commit со пораката "Add starter code"

---------------------------------------------------------------------------------------------------
Чекор 8)
Команда:
$ git push origin master ---> се што правев додега во локалниот репозиториум прикачив на оддалечениот репозиториум

-----------------------------------------------------------------------------------------------------------------------------
Чекор 9)
Команда:
$ git branch bug1 ---> креирање на гранка bug1
$ git branch bug2 ---> креирање на гранка bug2
$ git branch ---> излистување на сите постоечки гранки

---------------------------------------------------------------
Чекор 10) и 11)
Команди:
$ git checkout bug1 ---> влегувам во гранката bug1
$ nano SILab1_1.java ---> влегувам во SILab1_1.java ја поправам грешката
$ git add . ---> ги додавам направените промени
$ git commit -m "Fix wrong condition in filterOddLengthStrings" ---> правам commit

-----------------------------------------------------------------------------------------
Чекор 12) и 13)
Команди:
$ git checkout bug2 ---> влегувам во гранката bug2
$ nano SILab1_2.java ---> влегувам во SILab1_2.java ја поправам грешката
$ git add . ---> ги додавам направените промени
$ git commit -m "Fix wrong condition in makeBigStringFrom" ---> правам commit

-----------------------------------------------------------------------------------------
Чекор 14) и 15)
Команди:
$ git checkout bug1 ---> се префрлувам на гранката bug1
$ nano SILab1Main.java ---> влегувам во SILab1Main.java и ги правам потребните измени
$ git add . ---> ги додавам направените промени
$ git commit -m "Call method filterOddLengthStrings in main class" ---> правам commit

-----------------------------------------------------------------------------------------
Чекор 16) и 17)
Команди:
$ git checkout bug2 ---> се префрлувам на гранката bug2
$ nano SILab1Main.java ---> влегувам во SILab1Main.java и ги правам потребните измени
$ git add . ---> ги додавам направените промени
$ git commit -m "Call method makeBigStringFrom in main class" ---> правам commit

-----------------------------------------------------------------------------------------
Чекор 18)
Команда:
$ git push origin --all ---> синхронизација на сите гранки со оддалечениот репозиториум

-----------------------------------------------------------------------------------------
Чекор 19), 20), 21) и 22)
Команди:
$ git checkout master ---> се префрлувам на master гранката
$ git merge bug1 ---> bug1 гранката ја спојувам со master гранката
$ git push origin --all ---> ги синхронизирам сите гранки со оддалечениот репозиториум
$ git checkout bug2 ---> се префрлувам на гранката bug2

-----------------------------------------------------------------------------------------
Чекор 23)
Команди:
$ git rebase master
Прикажува конфликт во SILab1Main.java
Auto-merging SILab1Main.java
CONFLICT (content): Merge conflict in SILab1Main.java

*Го надминав конфликтот на начин што ги оставив и двата повика до методите, само ги избришав <<<<<HEAD=====>>>>>
Команда:
$ nano SILab1Main.java
$ git add SILab1Main.java
$ git rebase --continue

---------------------------------------------------------------------------------------------------------------------------
Чекор 24), 25), 26) и 27)
Команди:
$ git checkout master ---> се префлувам на master гранката
$ git merge bug2 ---> bug2 гранката ја спојувам на master гранката
$ git push origin --all ---> ги синхронизирам сите гранки со оддалечениот репозиториум
$ git push origin bug2 --force ---> посебно синхронизирање на bug2 гранката со оддалечениот репозиториум

----------------------------------------------------------------------------------------------------------------
Чекор 28) и 29)
Команди:
$ git log ---> ги дава сите логови
$ nano logs.txt ---> креирам датотека logs.txt
$ git add logs.txt ---> правам додавање
$ git commit -m "Final commit" ---> правам commit
$ git add . ---> ја додавам датотеката 215017.txt
$ git commit -m "Final commit" ---> правам commit
$ git push origin --all ---> синхронизација на сите гранки со оддалечениот репозиториум

------------------------------------------------------------------------------------------















